<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="2202px" preserveAspectRatio="none" style="width:288px;height:2202px;" version="1.1" viewBox="0 0 288 2202" width="288px" zoomAndPan="magnify"><defs><filter height="300%" id="f1upwfa36g47m2" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[2017ba9c4e8e5edff669bcf2f69a024b]
class com.ibm.fhir.database.utils.jdbc.PreparedStatementStub--><a href="PreparedStatementStub.html" target="_top" title="PreparedStatementStub.html" xlink:actuate="onRequest" xlink:href="PreparedStatementStub.html" xlink:show="new" xlink:title="PreparedStatementStub.html" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1upwfa36g47m2)" height="1341.7734" id="com.ibm.fhir.database.utils.jdbc.PreparedStatementStub" style="stroke: #A80036; stroke-width: 1.5;" width="271" x="6" y="827"/><ellipse cx="56.25" cy="846.1328" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M58.7231,852.2759 Q58.1421,852.5747 57.5029,852.7241 Q56.8638,852.8735 56.1582,852.8735 Q53.6514,852.8735 52.3315,851.2217 Q51.0117,849.5698 51.0117,846.4487 Q51.0117,843.3193 52.3315,841.6675 Q53.6514,840.0156 56.1582,840.0156 Q56.8638,840.0156 57.5112,840.165 Q58.1587,840.3145 58.7231,840.6133 L58.7231,843.3359 Q58.0923,842.7549 57.4988,842.4851 Q56.9053,842.2153 56.2744,842.2153 Q54.9297,842.2153 54.2449,843.282 Q53.5601,844.3486 53.5601,846.4487 Q53.5601,848.5405 54.2449,849.6072 Q54.9297,850.6738 56.2744,850.6738 Q56.9053,850.6738 57.4988,850.4041 Q58.0923,850.1343 58.7231,849.5532 Z "/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="162" x="76.75" y="845.5352">PreparedStatementStub</text><text fill="#000000" font-family="sans-serif" font-size="10" lengthAdjust="spacingAndGlyphs" textLength="156" x="79.75" y="858.1563">com.ibm.fhir.database.utils.jdbc</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="276" y1="865.2656" y2="865.2656"/><polygon fill="#FFFF44" points="17,871.2656,21,875.2656,17,879.2656,13,875.2656" style="stroke: #B38D22; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="219" x="26" y="879.9004">PreparedStatementStub(ConnectionStub)</text><ellipse cx="17" cy="889.2207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="26" y="892.8555">addBatch(String): void</text><ellipse cx="17" cy="902.1758" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="71" x="26" y="905.8105">cancel(): void</text><ellipse cx="17" cy="915.1309" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="92" x="26" y="918.7656">clearBatch(): void</text><ellipse cx="17" cy="928.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="26" y="931.7207">clearWarnings(): void</text><ellipse cx="17" cy="941.041" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="65" x="26" y="944.6758">close(): void</text><ellipse cx="17" cy="953.9961" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="26" y="957.6309">closeOnCompletion(): void</text><ellipse cx="17" cy="966.9512" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="26" y="970.5859">execute(String): boolean</text><ellipse cx="17" cy="979.9063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="26" y="983.541">execute(String, int): boolean</text><ellipse cx="17" cy="992.8613" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="26" y="996.4961">execute(String, int[]): boolean</text><ellipse cx="17" cy="1005.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="177" x="26" y="1009.4512">execute(String, String[]): boolean</text><ellipse cx="17" cy="1018.7715" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="26" y="1022.4063">executeBatch(): int[]</text><ellipse cx="17" cy="1031.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="170" x="26" y="1035.3613">executeQuery(String): ResultSet</text><ellipse cx="17" cy="1044.6816" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="26" y="1048.3164">executeUpdate(String): int</text><ellipse cx="17" cy="1057.6367" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="26" y="1061.2715">executeUpdate(String, int): int</text><ellipse cx="17" cy="1070.5918" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="168" x="26" y="1074.2266">executeUpdate(String, int[]): int</text><ellipse cx="17" cy="1083.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="186" x="26" y="1087.1816">executeUpdate(String, String[]): int</text><ellipse cx="17" cy="1096.502" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="26" y="1100.1367">getConnection(): Connection</text><ellipse cx="17" cy="1109.457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="26" y="1113.0918">getFetchDirection(): int</text><ellipse cx="17" cy="1122.4121" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="26" y="1126.0469">getFetchSize(): int</text><ellipse cx="17" cy="1135.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="160" x="26" y="1139.002">getGeneratedKeys(): ResultSet</text><ellipse cx="17" cy="1148.3223" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="113" x="26" y="1151.957">getMaxFieldSize(): int</text><ellipse cx="17" cy="1161.2773" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="95" x="26" y="1164.9121">getMaxRows(): int</text><ellipse cx="17" cy="1174.2324" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="140" x="26" y="1177.8672">getMoreResults(): boolean</text><ellipse cx="17" cy="1187.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="26" y="1190.8223">getMoreResults(int): boolean</text><ellipse cx="17" cy="1200.1426" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="26" y="1203.7773">getQueryTimeout(): int</text><ellipse cx="17" cy="1213.0977" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="129" x="26" y="1216.7324">getResultSet(): ResultSet</text><ellipse cx="17" cy="1226.0527" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="164" x="26" y="1229.6875">getResultSetConcurrency(): int</text><ellipse cx="17" cy="1239.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="151" x="26" y="1242.6426">getResultSetHoldability(): int</text><ellipse cx="17" cy="1251.9629" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="26" y="1255.5977">getResultSetType(): int</text><ellipse cx="17" cy="1264.918" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="26" y="1268.5527">getUpdateCount(): int</text><ellipse cx="17" cy="1277.873" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="26" y="1281.5078">getWarnings(): SQLWarning</text><ellipse cx="17" cy="1290.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="174" x="26" y="1294.4629">isCloseOnCompletion(): boolean</text><ellipse cx="17" cy="1303.7832" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="26" y="1307.418">isClosed(): boolean</text><ellipse cx="17" cy="1316.7383" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="26" y="1320.373">isPoolable(): boolean</text><ellipse cx="17" cy="1329.6934" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="153" x="26" y="1333.3281">setCursorName(String): void</text><ellipse cx="17" cy="1342.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="192" x="26" y="1346.2832">setEscapeProcessing(boolean): void</text><ellipse cx="17" cy="1355.6035" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="26" y="1359.2383">setFetchDirection(int): void</text><ellipse cx="17" cy="1368.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="26" y="1372.1934">setFetchSize(int): void</text><ellipse cx="17" cy="1381.5137" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="26" y="1385.1484">setMaxFieldSize(int): void</text><ellipse cx="17" cy="1394.4688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="26" y="1398.1035">setMaxRows(int): void</text><ellipse cx="17" cy="1407.4238" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="141" x="26" y="1411.0586">setPoolable(boolean): void</text><ellipse cx="17" cy="1420.3789" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="144" x="26" y="1424.0137">setQueryTimeout(int): void</text><ellipse cx="17" cy="1433.334" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="181" x="26" y="1436.9688">isWrapperFor(Class&lt;?&gt;): boolean</text><ellipse cx="17" cy="1446.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="26" y="1449.9238">unwrap(Class&lt;T&gt;): T</text><ellipse cx="17" cy="1459.2441" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="26" y="1462.8789">addBatch(): void</text><ellipse cx="17" cy="1472.1992" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="26" y="1475.834">clearParameters(): void</text><ellipse cx="17" cy="1485.1543" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="26" y="1488.7891">execute(): boolean</text><ellipse cx="17" cy="1498.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="26" y="1501.7441">executeQuery(): ResultSet</text><ellipse cx="17" cy="1511.0645" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="26" y="1514.6992">executeUpdate(): int</text><ellipse cx="17" cy="1524.0195" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="178" x="26" y="1527.6543">getMetaData(): ResultSetMetaData</text><ellipse cx="17" cy="1536.9746" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="237" x="26" y="1540.6094">getParameterMetaData(): ParameterMetaData</text><ellipse cx="17" cy="1549.9297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="26" y="1553.5645">setArray(int, Array): void</text><ellipse cx="17" cy="1562.8848" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="201" x="26" y="1566.5195">setAsciiStream(int, InputStream): void</text><ellipse cx="17" cy="1575.8398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="221" x="26" y="1579.4746">setAsciiStream(int, InputStream, int): void</text><ellipse cx="17" cy="1588.7949" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="231" x="26" y="1592.4297">setAsciiStream(int, InputStream, long): void</text><ellipse cx="17" cy="1601.75" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="26" y="1605.3848">setBigDecimal(int, BigDecimal): void</text><ellipse cx="17" cy="1614.7051" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="26" y="1618.3398">setBinaryStream(int, InputStream): void</text><ellipse cx="17" cy="1627.6602" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="228" x="26" y="1631.2949">setBinaryStream(int, InputStream, int): void</text><ellipse cx="17" cy="1640.6152" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="26" y="1644.25">setBinaryStream(int, InputStream, long): void</text><ellipse cx="17" cy="1653.5703" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="26" y="1657.2051">setBlob(int, Blob): void</text><ellipse cx="17" cy="1666.5254" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="161" x="26" y="1670.1602">setBlob(int, InputStream): void</text><ellipse cx="17" cy="1679.4805" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="26" y="1683.1152">setBlob(int, InputStream, long): void</text><ellipse cx="17" cy="1692.4355" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="26" y="1696.0703">setBoolean(int, boolean): void</text><ellipse cx="17" cy="1705.3906" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="118" x="26" y="1709.0254">setByte(int, byte): void</text><ellipse cx="17" cy="1718.3457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="132" x="26" y="1721.9805">setBytes(int, byte[]): void</text><ellipse cx="17" cy="1731.3008" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="200" x="26" y="1734.9355">setCharacterStream(int, Reader): void</text><ellipse cx="17" cy="1744.2559" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="220" x="26" y="1747.8906">setCharacterStream(int, Reader, int): void</text><ellipse cx="17" cy="1757.2109" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="230" x="26" y="1760.8457">setCharacterStream(int, Reader, long): void</text><ellipse cx="17" cy="1770.166" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="26" y="1773.8008">setClob(int, Clob): void</text><ellipse cx="17" cy="1783.1211" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="135" x="26" y="1786.7559">setClob(int, Reader): void</text><ellipse cx="17" cy="1796.0762" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="165" x="26" y="1799.7109">setClob(int, Reader, long): void</text><ellipse cx="17" cy="1809.0313" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="26" y="1812.666">setDate(int, Date): void</text><ellipse cx="17" cy="1821.9863" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="26" y="1825.6211">setDate(int, Date, Calendar): void</text><ellipse cx="17" cy="1834.9414" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="148" x="26" y="1838.5762">setDouble(int, double): void</text><ellipse cx="17" cy="1847.8965" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="123" x="26" y="1851.5313">setFloat(int, float): void</text><ellipse cx="17" cy="1860.8516" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="26" y="1864.4863">setInt(int, int): void</text><ellipse cx="17" cy="1873.8066" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="124" x="26" y="1877.4414">setLong(int, long): void</text><ellipse cx="17" cy="1886.7617" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="208" x="26" y="1890.3965">setNCharacterStream(int, Reader): void</text><ellipse cx="17" cy="1899.7168" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="238" x="26" y="1903.3516">setNCharacterStream(int, Reader, long): void</text><ellipse cx="17" cy="1912.6719" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="139" x="26" y="1916.3066">setNClob(int, NClob): void</text><ellipse cx="17" cy="1925.627" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="26" y="1929.2617">setNClob(int, Reader): void</text><ellipse cx="17" cy="1938.582" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="173" x="26" y="1942.2168">setNClob(int, Reader, long): void</text><ellipse cx="17" cy="1951.5371" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="145" x="26" y="1955.1719">setNString(int, String): void</text><ellipse cx="17" cy="1964.4922" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="26" y="1968.127">setNull(int, int): void</text><ellipse cx="17" cy="1977.4473" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="146" x="26" y="1981.082">setNull(int, int, String): void</text><ellipse cx="17" cy="1990.4023" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="143" x="26" y="1994.0371">setObject(int, Object): void</text><ellipse cx="17" cy="2003.3574" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="26" y="2006.9922">setObject(int, Object, int): void</text><ellipse cx="17" cy="2016.3125" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="183" x="26" y="2019.9473">setObject(int, Object, int, int): void</text><ellipse cx="17" cy="2029.2676" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="26" y="2032.9023">setRef(int, Ref): void</text><ellipse cx="17" cy="2042.2227" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="26" y="2045.8574">setRowId(int, RowId): void</text><ellipse cx="17" cy="2055.1777" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="159" x="26" y="2058.8125">setSQLXML(int, SQLXML): void</text><ellipse cx="17" cy="2068.1328" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="131" x="26" y="2071.7676">setShort(int, short): void</text><ellipse cx="17" cy="2081.0879" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="137" x="26" y="2084.7227">setString(int, String): void</text><ellipse cx="17" cy="2094.043" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="125" x="26" y="2097.6777">setTime(int, Time): void</text><ellipse cx="17" cy="2106.998" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="179" x="26" y="2110.6328">setTime(int, Time, Calendar): void</text><ellipse cx="17" cy="2119.9531" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="191" x="26" y="2123.5879">setTimestamp(int, Timestamp): void</text><ellipse cx="17" cy="2132.9082" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="245" x="26" y="2136.543">setTimestamp(int, Timestamp, Calendar): void</text><ellipse cx="17" cy="2145.8633" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="26" y="2149.498">setURL(int, URL): void</text><ellipse cx="17" cy="2158.8184" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="26" y="2162.4531">setUnicodeStream(int, InputStream, int): void</text></a><!--MD5=[07a4118b6af040118095243d4f16abbf]
class java.sql.PreparedStatement--><a href="https://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html?is-external=true" target="_top" title="https://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html?is-external=true" xlink:actuate="onRequest" xlink:href="https://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html?is-external=true" xlink:show="new" xlink:title="https://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html?is-external=true" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f1upwfa36g47m2)" height="758.7949" id="java.sql.PreparedStatement" style="stroke: #A80036; stroke-width: 1.5;" width="271" x="6" y="8"/><ellipse cx="71.75" cy="27.1328" fill="#B4A7E5" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M68.1777,23.3979 L68.1777,21.2397 L75.5571,21.2397 L75.5571,23.3979 L73.0918,23.3979 L73.0918,31.4746 L75.5571,31.4746 L75.5571,33.6328 L68.1777,33.6328 L68.1777,31.4746 L70.6431,31.4746 L70.6431,23.3979 Z "/><text fill="#000000" font-family="sans-serif" font-size="14" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="131" x="92.25" y="26.5352">PreparedStatement</text><text fill="#000000" font-family="sans-serif" font-size="10" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="37" x="139.25" y="39.1563">java.sql</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="276" y1="46.2656" y2="46.2656"/><ellipse cx="17" cy="57.2656" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="138" x="26" y="60.9004">executeQuery(): ResultSet</text><ellipse cx="17" cy="70.2207" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="108" x="26" y="73.8555">executeUpdate(): int</text><ellipse cx="17" cy="83.1758" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="108" x="26" y="86.8105">setNull(int, int): void</text><ellipse cx="17" cy="96.1309" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="158" x="26" y="99.7656">setBoolean(int, boolean): void</text><ellipse cx="17" cy="109.0859" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="118" x="26" y="112.7207">setByte(int, byte): void</text><ellipse cx="17" cy="122.041" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="131" x="26" y="125.6758">setShort(int, short): void</text><ellipse cx="17" cy="134.9961" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="101" x="26" y="138.6309">setInt(int, int): void</text><ellipse cx="17" cy="147.9512" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="124" x="26" y="151.5859">setLong(int, long): void</text><ellipse cx="17" cy="160.9063" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="123" x="26" y="164.541">setFloat(int, float): void</text><ellipse cx="17" cy="173.8613" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="148" x="26" y="177.4961">setDouble(int, double): void</text><ellipse cx="17" cy="186.8164" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="189" x="26" y="190.4512">setBigDecimal(int, BigDecimal): void</text><ellipse cx="17" cy="199.7715" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="137" x="26" y="203.4063">setString(int, String): void</text><ellipse cx="17" cy="212.7266" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="132" x="26" y="216.3613">setBytes(int, byte[]): void</text><ellipse cx="17" cy="225.6816" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="121" x="26" y="229.3164">setDate(int, Date): void</text><ellipse cx="17" cy="238.6367" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="125" x="26" y="242.2715">setTime(int, Time): void</text><ellipse cx="17" cy="251.5918" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="191" x="26" y="255.2266">setTimestamp(int, Timestamp): void</text><ellipse cx="17" cy="264.5469" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="221" x="26" y="268.1816">setAsciiStream(int, InputStream, int): void</text><ellipse cx="17" cy="277.502" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" text-decoration="line-through" textLength="97" x="26" y="281.1367">setUnicodeStream</text><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="142" x="123" y="281.1367">(int, InputStream, int): void</text><ellipse cx="17" cy="290.457" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="228" x="26" y="294.0918">setBinaryStream(int, InputStream, int): void</text><ellipse cx="17" cy="303.4121" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="123" x="26" y="307.0469">clearParameters(): void</text><ellipse cx="17" cy="316.3672" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="163" x="26" y="320.002">setObject(int, Object, int): void</text><ellipse cx="17" cy="329.3223" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="143" x="26" y="332.957">setObject(int, Object): void</text><ellipse cx="17" cy="342.2773" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="99" x="26" y="345.9121">execute(): boolean</text><ellipse cx="17" cy="355.2324" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="86" x="26" y="358.8672">addBatch(): void</text><ellipse cx="17" cy="368.1875" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="220" x="26" y="371.8223">setCharacterStream(int, Reader, int): void</text><ellipse cx="17" cy="381.1426" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="107" x="26" y="384.7773">setRef(int, Ref): void</text><ellipse cx="17" cy="394.0977" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="119" x="26" y="397.7324">setBlob(int, Blob): void</text><ellipse cx="17" cy="407.0527" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="123" x="26" y="410.6875">setClob(int, Clob): void</text><ellipse cx="17" cy="420.0078" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="133" x="26" y="423.6426">setArray(int, Array): void</text><ellipse cx="17" cy="432.9629" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="178" x="26" y="436.5977">getMetaData(): ResultSetMetaData</text><ellipse cx="17" cy="445.918" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="175" x="26" y="449.5527">setDate(int, Date, Calendar): void</text><ellipse cx="17" cy="458.873" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="179" x="26" y="462.5078">setTime(int, Time, Calendar): void</text><ellipse cx="17" cy="471.8281" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="245" x="26" y="475.4629">setTimestamp(int, Timestamp, Calendar): void</text><ellipse cx="17" cy="484.7832" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="146" x="26" y="488.418">setNull(int, int, String): void</text><ellipse cx="17" cy="497.7383" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="115" x="26" y="501.373">setURL(int, URL): void</text><ellipse cx="17" cy="510.6934" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="237" x="26" y="514.3281">getParameterMetaData(): ParameterMetaData</text><ellipse cx="17" cy="523.6484" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="137" x="26" y="527.2832">setRowId(int, RowId): void</text><ellipse cx="17" cy="536.6035" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="145" x="26" y="540.2383">setNString(int, String): void</text><ellipse cx="17" cy="549.5586" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="238" x="26" y="553.1934">setNCharacterStream(int, Reader, long): void</text><ellipse cx="17" cy="562.5137" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="139" x="26" y="566.1484">setNClob(int, NClob): void</text><ellipse cx="17" cy="575.4688" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="165" x="26" y="579.1035">setClob(int, Reader, long): void</text><ellipse cx="17" cy="588.4238" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="191" x="26" y="592.0586">setBlob(int, InputStream, long): void</text><ellipse cx="17" cy="601.3789" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="173" x="26" y="605.0137">setNClob(int, Reader, long): void</text><ellipse cx="17" cy="614.334" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="159" x="26" y="617.9688">setSQLXML(int, SQLXML): void</text><ellipse cx="17" cy="627.2891" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="183" x="26" y="630.9238">setObject(int, Object, int, int): void</text><ellipse cx="17" cy="640.2441" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="231" x="26" y="643.8789">setAsciiStream(int, InputStream, long): void</text><ellipse cx="17" cy="653.1992" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="238" x="26" y="656.834">setBinaryStream(int, InputStream, long): void</text><ellipse cx="17" cy="666.1543" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="230" x="26" y="669.7891">setCharacterStream(int, Reader, long): void</text><ellipse cx="17" cy="679.1094" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="201" x="26" y="682.7441">setAsciiStream(int, InputStream): void</text><ellipse cx="17" cy="692.0645" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="208" x="26" y="695.6992">setBinaryStream(int, InputStream): void</text><ellipse cx="17" cy="705.0195" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="200" x="26" y="708.6543">setCharacterStream(int, Reader): void</text><ellipse cx="17" cy="717.9746" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="208" x="26" y="721.6094">setNCharacterStream(int, Reader): void</text><ellipse cx="17" cy="730.9297" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="135" x="26" y="734.5645">setClob(int, Reader): void</text><ellipse cx="17" cy="743.8848" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="161" x="26" y="747.5195">setBlob(int, InputStream): void</text><ellipse cx="17" cy="756.8398" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="143" x="26" y="760.4746">setNClob(int, Reader): void</text></a><!--MD5=[52904808a24dbe89903e21c72ac452ee]
reverse link java.sql.PreparedStatement to com.ibm.fhir.database.utils.jdbc.PreparedStatementStub--><path d="M141.5,787.5298 C141.5,800.4438 141.5,813.4796 141.5,826.6061 " fill="none" id="java.sql.PreparedStatement&lt;-com.ibm.fhir.database.utils.jdbc.PreparedStatementStub" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="none" points="134.5001,787.3412,141.5,767.3411,148.5001,787.3411,134.5001,787.3412" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacingAndGlyphs" textLength="182" x="56.5" y="2188.668">UMLDoclet 2.0.7, PlantUML 1.2019.12</text><!--MD5=[adabcfe6b3c3946d71195191c2578155]
@startuml
    set namespaceSeparator none
    hide empty fields
    hide empty methods

    class "<size:14>PreparedStatementStub\n<size:10>com.ibm.fhir.database.utils.jdbc" as com.ibm.fhir.database.utils.jdbc.PreparedStatementStub [[PreparedStatementStub.html]] {
        #PreparedStatementStub(ConnectionStub)
        +addBatch(String): void
        +cancel(): void
        +clearBatch(): void
        +clearWarnings(): void
        +close(): void
        +closeOnCompletion(): void
        +execute(String): boolean
        +execute(String, int): boolean
        +execute(String, int[]): boolean
        +execute(String, String[]): boolean
        +executeBatch(): int[]
        +executeQuery(String): ResultSet
        +executeUpdate(String): int
        +executeUpdate(String, int): int
        +executeUpdate(String, int[]): int
        +executeUpdate(String, String[]): int
        +getConnection(): Connection
        +getFetchDirection(): int
        +getFetchSize(): int
        +getGeneratedKeys(): ResultSet
        +getMaxFieldSize(): int
        +getMaxRows(): int
        +getMoreResults(): boolean
        +getMoreResults(int): boolean
        +getQueryTimeout(): int
        +getResultSet(): ResultSet
        +getResultSetConcurrency(): int
        +getResultSetHoldability(): int
        +getResultSetType(): int
        +getUpdateCount(): int
        +getWarnings(): SQLWarning
        +isCloseOnCompletion(): boolean
        +isClosed(): boolean
        +isPoolable(): boolean
        +setCursorName(String): void
        +setEscapeProcessing(boolean): void
        +setFetchDirection(int): void
        +setFetchSize(int): void
        +setMaxFieldSize(int): void
        +setMaxRows(int): void
        +setPoolable(boolean): void
        +setQueryTimeout(int): void
        +isWrapperFor(Class<?>): boolean
        +unwrap(Class<T>): T
        +addBatch(): void
        +clearParameters(): void
        +execute(): boolean
        +executeQuery(): ResultSet
        +executeUpdate(): int
        +getMetaData(): ResultSetMetaData
        +getParameterMetaData(): ParameterMetaData
        +setArray(int, Array): void
        +setAsciiStream(int, InputStream): void
        +setAsciiStream(int, InputStream, int): void
        +setAsciiStream(int, InputStream, long): void
        +setBigDecimal(int, BigDecimal): void
        +setBinaryStream(int, InputStream): void
        +setBinaryStream(int, InputStream, int): void
        +setBinaryStream(int, InputStream, long): void
        +setBlob(int, Blob): void
        +setBlob(int, InputStream): void
        +setBlob(int, InputStream, long): void
        +setBoolean(int, boolean): void
        +setByte(int, byte): void
        +setBytes(int, byte[]): void
        +setCharacterStream(int, Reader): void
        +setCharacterStream(int, Reader, int): void
        +setCharacterStream(int, Reader, long): void
        +setClob(int, Clob): void
        +setClob(int, Reader): void
        +setClob(int, Reader, long): void
        +setDate(int, Date): void
        +setDate(int, Date, Calendar): void
        +setDouble(int, double): void
        +setFloat(int, float): void
        +setInt(int, int): void
        +setLong(int, long): void
        +setNCharacterStream(int, Reader): void
        +setNCharacterStream(int, Reader, long): void
        +setNClob(int, NClob): void
        +setNClob(int, Reader): void
        +setNClob(int, Reader, long): void
        +setNString(int, String): void
        +setNull(int, int): void
        +setNull(int, int, String): void
        +setObject(int, Object): void
        +setObject(int, Object, int): void
        +setObject(int, Object, int, int): void
        +setRef(int, Ref): void
        +setRowId(int, RowId): void
        +setSQLXML(int, SQLXML): void
        +setShort(int, short): void
        +setString(int, String): void
        +setTime(int, Time): void
        +setTime(int, Time, Calendar): void
        +setTimestamp(int, Timestamp): void
        +setTimestamp(int, Timestamp, Calendar): void
        +setURL(int, URL): void
        +setUnicodeStream(int, InputStream, int): void
    }

    interface "<size:14>PreparedStatement\n<size:10>java.sql" as java.sql.PreparedStatement [[https://docs.oracle.com/javase/8/docs/api/java/sql/PreparedStatement.html?is-external=true]] {
        {abstract} +executeQuery(): ResultSet
        {abstract} +executeUpdate(): int
        {abstract} +setNull(int, int): void
        {abstract} +setBoolean(int, boolean): void
        {abstract} +setByte(int, byte): void
        {abstract} +setShort(int, short): void
        {abstract} +setInt(int, int): void
        {abstract} +setLong(int, long): void
        {abstract} +setFloat(int, float): void
        {abstract} +setDouble(int, double): void
        {abstract} +setBigDecimal(int, BigDecimal): void
        {abstract} +setString(int, String): void
        {abstract} +setBytes(int, byte[]): void
        {abstract} +setDate(int, Date): void
        {abstract} +setTime(int, Time): void
        {abstract} +setTimestamp(int, Timestamp): void
        {abstract} +setAsciiStream(int, InputStream, int): void
        {abstract} +- -setUnicodeStream- -(int, InputStream, int): void
        {abstract} +setBinaryStream(int, InputStream, int): void
        {abstract} +clearParameters(): void
        {abstract} +setObject(int, Object, int): void
        {abstract} +setObject(int, Object): void
        {abstract} +execute(): boolean
        {abstract} +addBatch(): void
        {abstract} +setCharacterStream(int, Reader, int): void
        {abstract} +setRef(int, Ref): void
        {abstract} +setBlob(int, Blob): void
        {abstract} +setClob(int, Clob): void
        {abstract} +setArray(int, Array): void
        {abstract} +getMetaData(): ResultSetMetaData
        {abstract} +setDate(int, Date, Calendar): void
        {abstract} +setTime(int, Time, Calendar): void
        {abstract} +setTimestamp(int, Timestamp, Calendar): void
        {abstract} +setNull(int, int, String): void
        {abstract} +setURL(int, URL): void
        {abstract} +getParameterMetaData(): ParameterMetaData
        {abstract} +setRowId(int, RowId): void
        {abstract} +setNString(int, String): void
        {abstract} +setNCharacterStream(int, Reader, long): void
        {abstract} +setNClob(int, NClob): void
        {abstract} +setClob(int, Reader, long): void
        {abstract} +setBlob(int, InputStream, long): void
        {abstract} +setNClob(int, Reader, long): void
        {abstract} +setSQLXML(int, SQLXML): void
        {abstract} +setObject(int, Object, int, int): void
        {abstract} +setAsciiStream(int, InputStream, long): void
        {abstract} +setBinaryStream(int, InputStream, long): void
        {abstract} +setCharacterStream(int, Reader, long): void
        {abstract} +setAsciiStream(int, InputStream): void
        {abstract} +setBinaryStream(int, InputStream): void
        {abstract} +setCharacterStream(int, Reader): void
        {abstract} +setNCharacterStream(int, Reader): void
        {abstract} +setClob(int, Reader): void
        {abstract} +setBlob(int, InputStream): void
        {abstract} +setNClob(int, Reader): void
    }

    java.sql.PreparedStatement <|.. com.ibm.fhir.database.utils.jdbc.PreparedStatementStub

    center footer UMLDoclet 2.0.7, PlantUML 1.2019.12
@enduml

PlantUML version 1.2019.12(Sun Nov 03 05:24:54 EST 2019)
(APACHE source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.4+11
Operating System: Mac OS X
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>