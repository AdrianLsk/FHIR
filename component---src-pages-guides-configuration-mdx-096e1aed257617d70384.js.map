{"version":3,"sources":["webpack:///./src/pages/guides/configuration.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"names":["_frontmatter","makeShortcode","name","props","console","warn","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_7__","PageDescription","AnchorLinks","AnchorLink","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutPropertiesLoose","_extends","mdxType","parentName","href","id","className","start","isMDXComponent","components_PageHeader","_cx","children","title","_ref$tabs","tabs","shouldHideHeader","core_browser_esm","cx","PageHeader_module","length","text","components_EditLink","relativePagePath","repositoryProp","repository","_1805934869","data","site","siteMetadata","_ref2","baseUrl","subDirectory","row","EditLink_module","components_PageTabs","render","_this$props","this","slug","currentTab","pageTabs","map","tab","slugifiedTab","slugify","lower","selected","key","PageTabs_module","gatsby_browser_entry","to","tabsContainer","list","React","Component","__webpack_exports__","pageContext","location","_pageContext$frontmat","frontmatter","scrollDirection","useScrollDirection","pathPrefix","_2216853253","pathname","Layout","homepage","label","Main","padded","NextPrevious","es"],"mappings":"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","file":"component---src-pages-guides-configuration-mdx-096e1aed257617d70384.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/paulbastide/git/wffh/tmp-fhir3/FHIR/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`Gatsby themes allow you to override configuration from the theme by defining the same property in your `}<inlineCode parentName=\"p\">{`gatsby-config.js`}</inlineCode>{` at the root of your project. You can see the default configuration provided by the themeâ€™s `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/carbon-design-system/gatsby-theme-carbon/blob/master/packages/gatsby-theme-carbon/gatsby-config.js\"\n        }}><inlineCode parentName=\"a\">{`gatsby-config.js`}</inlineCode></a>{` file.`}</p>\n    </PageDescription>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Site Title and Description</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Manifest</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Favicon</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Additional font weights</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Image Compression</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Global Search</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Edit on Github link</AnchorLink>\n    </AnchorLinks>\n    <h2 {...{\n      \"id\": \"site-title-and-description\"\n    }}>{`Site Title and Description`}</h2>\n    <p>{`To add a title and description to each page, simply provide them to siteMetadata in your `}<inlineCode parentName=\"p\">{`gatsby-config.js`}</inlineCode>{` file.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`module.exports = {\n  siteMetadata: {\n    title: 'Gatsby Theme Carbon',\n    description: 'A Gatsby theme for the carbon design system',\n    keywords: 'gatsby,theme,carbon',\n  },\n  plugins: ['gatsby-theme-carbon'],\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"manifest\"\n    }}>{`Manifest`}</h2>\n    <p>{`One of the first configurations should be to override the default manifest options, you can do this in `}<inlineCode parentName=\"p\">{`gatsby-config.js`}</inlineCode>{`. Any options you donâ€™t set, will be provided by the theme. See the example project.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`siteMetadata: {\n    title: 'Gatsby Theme Carbon',\n  },\n  plugins: [\n    'gatsby-theme-carbon',\n    {\n      resolve: 'gatsby-plugin-manifest',\n      options: {\n        name: 'Carbon Design Gatsby Theme',\n        short_name: 'Gatsby Theme Carbon',\n        start_url: '/',\n        background_color: '#ffffff',\n        theme_color: '#0062ff',\n        display: 'browser',\n      },\n    },\n  ],\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"favicon\"\n    }}>{`Favicon`}</h2>\n    <p>{`If you need to override the default favicon, you can do so by passing a relative path to the icon. Itâ€™s recommended to provide a 512 x 512 version.`}</p>\n    <p><strong parentName=\"p\">{`IMPORTANT:`}</strong>{` For best results, if youâ€™re providing an icon for generation it should beâ€¦`}</p>\n    <ul>\n      <li parentName=\"ul\">{`at least as big as the largest icon being generated (512x512 by default).`}</li>\n      <li parentName=\"ul\">{`square (if itâ€™s not, transparent bars will add to make it square).`}</li>\n      <li parentName=\"ul\">{`of one of the follow formats: JPEG, PNG, WebP, TIFF, GIF or SVG.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`plugins: [\n    {\n      resolve: 'gatsby-theme-carbon',\n      options: {\n        iconPath: './src/images/custom-icon-512.png'\n      },\n    },\n  ],\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"additional-font-weights\"\n    }}>{`Additional font weights`}</h2>\n    <p>{`If needed, you can add support for additional Plex font weights. Donâ€™t forget to specify italics for the additional weights if needed.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`plugins: [\n    {\n      resolve: 'gatsby-theme-carbon',\n      options: {\n        // will get added to default [300, 400, 600]\n        additionalFontWeights: ['200', '200i]\n      },\n    },\n  ],\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"image-compression\"\n    }}>{`Image Compression`}</h2>\n    <p>{`You can enable WebP by passing `}<inlineCode parentName=\"p\">{`withWebp: true`}</inlineCode>{` or providing your own optimization level. See the gatsby-remark-images `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.gatsbyjs.org/packages/gatsby-remark-images/#options\"\n      }}>{`plugin options`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`module.exports = {\n  siteMetadata: {\n    title: 'Gatsby Theme Carbon',\n  },\n  plugins: [\n    {\n      resolve: 'gatsby-theme-carbon',\n      options: {\n        name: 'Gatsby Theme Carbon Starter',\n        shortName: 'Carbon Starter',\n        withWebp: true,\n      },\n    },\n  ],\n};\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"global-search\"\n    }}>{`Global Search`}</h2>\n    <p>{`The GlobalSearch component is disabled by default. If youâ€™d like to implement search functionality, youâ€™ll need to follow these two steps:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`set the isSearchEnabled theme option to true`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`  plugins: [\n    {\n      resolve: 'gatsby-theme-carbon',\n      options: {\n        isSearchEnabled: true\n      },\n    },\n  ],\n`}</code></pre>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Shadow the example search implementation at `}<inlineCode parentName=\"li\">{`/src/util/hooks/useSearch.js`}</inlineCode></li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { useEffect } from 'react';\nconst useAlgoliaSearch = () => {\n  // ...\n};\n\nexport default useAlgoliaSearch;\n`}</code></pre>\n    <p>{`The example `}<inlineCode parentName=\"p\">{`useSearch`}</inlineCode>{` hook demonstrates implementing search with `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.algolia.com/\"\n      }}>{`Algolia`}</a>{`. Algolia is free for open source libraries. You can shadow this hook and replace it with your Algolia credentials or a library of your choosing.`}</p>\n    <h2 {...{\n      \"id\": \"edit-on-github-link\"\n    }}>{`Edit on GitHub link`}</h2>\n    <p>{`To add a link to the bottom of each page that points to the current page source in GitHub, provide an `}<inlineCode parentName=\"p\">{`repository`}</inlineCode>{` object to `}<inlineCode parentName=\"p\">{`siteMetadata`}</inlineCode>{` in your `}<inlineCode parentName=\"p\">{`gatsby-config.js`}</inlineCode>{` file. You can provide a `}<inlineCode parentName=\"p\">{`baseUrl`}</inlineCode>{`, and if needed, the `}<inlineCode parentName=\"p\">{`subDirectory`}</inlineCode>{` where your site source lives.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`  plugins: [\n    {\n      resolve: 'gatsby-theme-carbon',\n      options: {\n        repository: {\n          baseUrl: 'https://github.com/carbon-design-system/gatsby-theme-carbon',\n          subDirectory: '/packages/example',\n        },\n      },\n    },\n  ],\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport {\n  pageHeader,\n  text,\n  pageHeaderSticky,\n  pageHeaderShifted,\n} from './PageHeader.module.scss';\n\nconst PageHeader = ({ children, title, tabs = [], shouldHideHeader }) => (\n  <div\n    className={cx({\n      [pageHeader]: pageHeader,\n      [pageHeaderSticky]: tabs.length,\n      [pageHeaderShifted]: shouldHideHeader,\n    })}\n  >\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n    {children}\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Pass in the children that will be rendered within the PageHeader\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.string,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory } = repositoryProp || repository;\n\n  const href = `${baseUrl}/tree/master${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const href = slug.replace(currentTab, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { WebsiteBackToTopBtn } from '@carbon/addons-website';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport { useScrollDirection } from '../util/hooks';\n\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location }) => {\n  const { frontmatter = {}, relativePagePath } = pageContext;\n  const { tabs, title } = frontmatter;\n  const scrollDirection = useScrollDirection();\n  const shouldHideHeader = !!tabs && scrollDirection === 'down';\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return slug.split('/').slice(-1)[0] || slugify(tabs[0], { lower: true });\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout shouldHideHeader={shouldHideHeader} homepage={false}>\n      <PageHeader\n        shouldHideHeader={shouldHideHeader}\n        title={title}\n        label=\"label\"\n        tabs={tabs}\n      >\n        {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      </PageHeader>\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <WebsiteBackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"sourceRoot":""}