{"version":3,"sources":["webpack:///./src/pages/guides/CreateFHIRValidationAssembly.md","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_7__","_extends","mdxType","id","parentName","href","className","isMDXComponent","components_PageHeader","_cx","children","title","_ref$tabs","tabs","shouldHideHeader","core_browser_esm","cx","PageHeader_module","length","text","components_EditLink","relativePagePath","repositoryProp","repository","_1805934869","data","site","siteMetadata","_ref2","baseUrl","subDirectory","row","EditLink_module","components_PageTabs","render","_this$props","this","slug","currentTab","pageTabs","map","tab","slugifiedTab","slugify","lower","selected","key","PageTabs_module","gatsby_browser_entry","to","tabsContainer","list","React","Component","__webpack_exports__","pageContext","location","_pageContext$frontmat","frontmatter","scrollDirection","useScrollDirection","pathPrefix","_2216853253","pathname","Layout","homepage","label","Main","padded","NextPrevious","es"],"mappings":"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","file":"component---src-pages-guides-create-fhir-validation-assembly-md-f9df758e57ab2b79c974.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/paulbastide/git/wffh/tmp-fhir3/FHIR/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h3 {...{\n      \"id\": \"pre-requisites\"\n    }}>{`Pre-Requisites`}</h3>\n    <p><strong parentName=\"p\">{`Repository`}</strong><br parentName=\"p\"></br>{`\n`}{`Navigate to `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/IBM/FHIR\"\n      }}>{`https://github.com/IBM/FHIR`}</a>{` `}</p>\n    <p>{`Open a terminal window `}</p>\n    <p>{`Clone to a local working directory\n`}<inlineCode parentName=\"p\">{`git clone git@github.com:IBM/FHIR.git`}</inlineCode></p>\n    <p><strong parentName=\"p\">{`Maven`}</strong><br parentName=\"p\"></br>{`\n`}{`You must have maven installed to create the build. `}<a parentName=\"p\" {...{\n        \"href\": \"https://maven.apache.org/\"\n      }}>{`https://maven.apache.org/`}</a>{`\nIt must be in the `}<inlineCode parentName=\"p\">{`PATH`}</inlineCode>{`.`}</p>\n    <p><strong parentName=\"p\">{`Dependencies`}</strong><br parentName=\"p\"></br>{`\n`}{`The `}<inlineCode parentName=\"p\">{`fhir-validation`}</inlineCode>{` module requires the `}<inlineCode parentName=\"p\">{`fhir-examples`}</inlineCode>{` be installed prior. `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{` mvn clean install -f fhir-examples/ \n`}</code></pre>\n    <p>{`You should see `}<inlineCode parentName=\"p\">{`[INFO] BUILD SUCCESS`}</inlineCode>{`, and are ready to proceed.`}</p>\n    <p>{`This installs the examples which are part of the build. `}</p>\n    <h3 {...{\n      \"id\": \"build\"\n    }}>{`Build`}</h3>\n    <p>{` To create the distribution, you can run the following profile. `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`mvn clean package -f fhir-validation/ -Pfhir-validation-distribution\n`}</code></pre>\n    <p>{` It’ll create the following zip file - `}<inlineCode parentName=\"p\">{`fhir-validation/target/fhir-validation-distribution.zip`}</inlineCode>{` `}</p>\n    <p>{`You should see `}<inlineCode parentName=\"p\">{`[INFO] BUILD SUCCESS`}</inlineCode>{`, and the assembly is ready.`}</p>\n    <p>{`This file contains: `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`  Length      Date    Time    Name\n---------  ---------- -----   ----\n        0  10-09-2019 14:18   fhir-validation-dist/\n   302248  09-06-2019 15:58   fhir-validation-dist/antlr4-runtime-4.5.3.jar\n  6181816  10-08-2019 06:36   fhir-validation-dist/fhir-model-4.0.0-SNAPSHOT.jar\n   140564  09-06-2019 15:58   fhir-validation-dist/jakarta.json-1.1.5.jar\n    18331  10-08-2019 06:35   fhir-validation-dist/fhir-core-4.0.0-SNAPSHOT.jar\n    25058  09-11-2019 15:05   fhir-validation-dist/jakarta.annotation-api-1.3.5.jar\n 10307966  10-08-2019 06:36   fhir-validation-dist/fhir-registry-4.0.0-SNAPSHOT.jar\n   214788  09-06-2019 15:58   fhir-validation-dist/commons-io-2.6.jar\n---------                     -------\n 52769970                     13 files\n`}</code></pre>\n    <p>\nFHIR® is the registered trademark of HL7 and is used with the permission of HL7.\n    </p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport {\n  pageHeader,\n  text,\n  pageHeaderSticky,\n  pageHeaderShifted,\n} from './PageHeader.module.scss';\n\nconst PageHeader = ({ children, title, tabs = [], shouldHideHeader }) => (\n  <div\n    className={cx({\n      [pageHeader]: pageHeader,\n      [pageHeaderSticky]: tabs.length,\n      [pageHeaderShifted]: shouldHideHeader,\n    })}\n  >\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n    {children}\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Pass in the children that will be rendered within the PageHeader\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.string,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory } = repositoryProp || repository;\n\n  const href = `${baseUrl}/tree/master${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const href = slug.replace(currentTab, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { WebsiteBackToTopBtn } from '@carbon/addons-website';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport { useScrollDirection } from '../util/hooks';\n\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location }) => {\n  const { frontmatter = {}, relativePagePath } = pageContext;\n  const { tabs, title } = frontmatter;\n  const scrollDirection = useScrollDirection();\n  const shouldHideHeader = !!tabs && scrollDirection === 'down';\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return slug.split('/').slice(-1)[0] || slugify(tabs[0], { lower: true });\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout shouldHideHeader={shouldHideHeader} homepage={false}>\n      <PageHeader\n        shouldHideHeader={shouldHideHeader}\n        title={title}\n        label=\"label\"\n        tabs={tabs}\n      >\n        {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      </PageHeader>\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <WebsiteBackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"sourceRoot":""}