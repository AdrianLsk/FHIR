{"version":3,"sources":["webpack:///./src/pages/getting-started/index.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js"],"names":["name","_frontmatter","PageDescription","props","console","warn","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_7__","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutPropertiesLoose","_extends","mdxType","parentName","href","id","className","isMDXComponent","components_PageHeader","_cx","children","title","_ref$tabs","tabs","shouldHideHeader","core_browser_esm","cx","PageHeader_module","length","text","components_EditLink","relativePagePath","repositoryProp","repository","_1805934869","data","site","siteMetadata","_ref2","baseUrl","subDirectory","row","EditLink_module","components_PageTabs","render","_this$props","this","slug","currentTab","pageTabs","map","tab","slugifiedTab","slugify","lower","selected","key","PageTabs_module","gatsby_browser_entry","to","tabsContainer","list","React","Component","__webpack_exports__","pageContext","location","_pageContext$frontmat","frontmatter","scrollDirection","useScrollDirection","pathPrefix","_2216853253","pathname","Layout","homepage","label","Main","padded","NextPrevious","es"],"mappings":"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","file":"component---src-pages-getting-started-index-mdx-3ddf3e8295e37c925027.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/paulbastide/git/wffh/tmp-fhir3/FHIR/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`This project is a `}<a parentName=\"p\" {...{\n          \"href\": \"https://www.gatsbyjs.org/docs/themes/what-are-gatsby-themes/\"\n        }}>{`Gatsby theme`}</a>{` that empowers developers, writers, and designers to create fast, accessible sites that look and feel like Carbon. Follow along to start creating your own site.`}</p>\n    </PageDescription>\n    <h2 {...{\n      \"id\": \"first-steps\"\n    }}>{`First steps`}</h2>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Create your site`}</strong>{` – use the gatsby CLI to bootstrap your site with the starter`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-sh\"\n          }}>{`npx gatsby new my-carbon-site https://github.com/carbon-design-system/gatsby-starter-carbon-theme\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Start developing`}</strong>{` – navigate into your directory with `}<inlineCode parentName=\"p\">{`cd my-carbon-site`}</inlineCode>{`.`}</p>\n        <p parentName=\"li\">{`Start it up using one of the following snippets. You can tell which command to use based on the lock file at the root of your project (`}<inlineCode parentName=\"p\">{`yarn.lock`}</inlineCode>{` for yarn and `}<inlineCode parentName=\"p\">{`package-lock.json`}</inlineCode>{` for npm). For yarn, type `}<inlineCode parentName=\"p\">{`yarn develop`}</inlineCode>{` for npm, you’ll use `}<inlineCode parentName=\"p\">{`npm run develop`}</inlineCode>{`.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Make some changes!`}</strong>{` – open `}<a parentName=\"p\" {...{\n            \"href\": \"//localhost:8000\"\n          }}>{`localhost:8000`}</a>{` in your browser to see your site running.`}</p>\n        <p parentName=\"li\">{`Each of the Items in your side bar correlates to a MDX file in your `}<inlineCode parentName=\"p\">{`src/pages/`}</inlineCode>{` directory. Navigate to a site and try editing the corresponding markdown file. You’ll be able to see it update live!`}</p>\n      </li>\n    </ol>\n    <h2 {...{\n      \"id\": \"-whats-in-here\"\n    }}>{`🔍 What’s in here?`}</h2>\n    <p>{`Lets check out the structure of our project`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`.\n├── LICENSE\n├── README.md\n├── gatsby-config.js\n├── node_modules\n├── package.json\n├── public\n├── src\n│   ├── data\n│   ├── gatsby-theme-carbon\n│   ├── images\n│   └── pages\n└── yarn.lock\n`}</code></pre>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`/node_modules`}</inlineCode></strong>{`: This directory contains all of the modules of code that your project depends on (npm packages) are automatically installed.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`/src`}</inlineCode></strong>{`: This directory will contain all of the code related to what you will see on the front-end of your site.`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><strong parentName=\"li\">{`data`}</strong>{` this is where you’ll update your sidebar order and contents`}</li>\n          <li parentName=\"ul\"><strong parentName=\"li\">{`images`}</strong>{` you can colocate your images here or store them next to your pages, whichver you chose`}</li>\n          <li parentName=\"ul\"><strong parentName=\"li\">{`gatsby-theme-carbon`}</strong>{` this is where you’ll override (known as shadowing) the default `}<inlineCode parentName=\"li\">{`gatsby-theme-carbon`}</inlineCode>{` components`}</li>\n          <li parentName=\"ul\"><strong parentName=\"li\">{`pages`}</strong>{` This is where most of your content will live. You’ll represent each page with an MDX file.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`.gitignore`}</inlineCode></strong>{`: This file tells git which files it should not track / not maintain a version history for.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`gatsby-config.js`}</inlineCode></strong>{`: This is the main configuration file for a Gatsby site. This is where you can specify information about your site (metadata) like the site title and description. You’ll notice that all of the configuration for the site is coming from `}<inlineCode parentName=\"p\">{`gatsby-theme-carbon`}</inlineCode></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`LICENSE`}</inlineCode></strong>{`: Gatsby is licensed under the Apache 2.0 license.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`yarn.lock`}</inlineCode></strong>{` (See `}<inlineCode parentName=\"p\">{`package.json`}</inlineCode>{` below, first). This is an automatically generated file based on the exact versions of your npm dependencies that were installed for your project. `}<strong parentName=\"p\">{`(You won’t change this file directly).`}</strong></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\"><strong parentName=\"p\"><inlineCode parentName=\"strong\">{`package.json`}</inlineCode></strong>{`: A manifest file for Node.js projects, which includes things like metadata (the project’s name, author, etc). This manifest is how npm knows which packages to install for your project.`}</p>\n      </li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport {\n  pageHeader,\n  text,\n  pageHeaderSticky,\n  pageHeaderShifted,\n} from './PageHeader.module.scss';\n\nconst PageHeader = ({ children, title, tabs = [], shouldHideHeader }) => (\n  <div\n    className={cx({\n      [pageHeader]: pageHeader,\n      [pageHeaderSticky]: tabs.length,\n      [pageHeaderShifted]: shouldHideHeader,\n    })}\n  >\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n    {children}\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Pass in the children that will be rendered within the PageHeader\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.string,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory } = repositoryProp || repository;\n\n  const href = `${baseUrl}/tree/master${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  static propTypes = {\n    tabs: PropTypes.array,\n    slug: PropTypes.string,\n  };\n\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug\n      .split('/')\n      .filter(Boolean)\n      .slice(-1)[0];\n\n    const pageTabs = tabs.map(tab => {\n      const slugifiedTab = slugify(tab, { lower: true });\n      const selected = slugifiedTab === currentTab;\n      const href = slug.replace(currentTab, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { WebsiteBackToTopBtn } from '@carbon/addons-website';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport { useScrollDirection } from '../util/hooks';\n\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\n\nconst Default = ({ pageContext, children, location }) => {\n  const { frontmatter = {}, relativePagePath } = pageContext;\n  const { tabs, title } = frontmatter;\n  const scrollDirection = useScrollDirection();\n  const shouldHideHeader = !!tabs && scrollDirection === 'down';\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return slug.split('/').slice(-1)[0] || slugify(tabs[0], { lower: true });\n  };\n\n  const currentTab = getCurrentTab();\n  return (\n    <Layout shouldHideHeader={shouldHideHeader} homepage={false}>\n      <PageHeader\n        shouldHideHeader={shouldHideHeader}\n        title={title}\n        label=\"label\"\n        tabs={tabs}\n      >\n        {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n      </PageHeader>\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <WebsiteBackToTopBtn />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"sourceRoot":""}